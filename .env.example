# Since the ".env" file is gitignored, you can use this ".env.example" file to
# build a new ".env" file when you clone the repo. Keep this file up-to-date
# when you add new variables to `.env`.

# This file will be committed to version control, so make sure not to have any
# secrets in it. If you are cloning this repo, create a copy of this file named
# ".env" and populate it with your secrets.

# When adding additional environment variables, the schema in "backend/core/config.py"
# should be updated accordingly.

#############################################
# OpenAPI variables
#############################################
USE_AZURE=true
OPENAI_API_KEY=
OPENAI_ORGANIZATION=
ENABLE_LLM_CACHE=false # Set to true to enable LLM cache in redis
AZURE_OPENAI_API_KEY=
AZURE_OPENAI_ENDPOINT=
#############################################
# Authentication variables
#############################################
ENABLE_AUTH=false # Set to true to enable authentication
# NEXTAUTH_SECRET= # Add the same secret as in the frontend .env file
# NEXTAUTH_URL="http://localhost:3000" # Add the url as in the FE .env file

#############################################
# FastAPI environment variables
#############################################
PROJECT_NAME=SummarizeBot
PROJECT_DESCRIPTION="
        ðŸš€ Description  
        - This project is based on the [AgentKit repository by BCG](https://github.com/BCG-X-Official/agentkit).  
        - It aims to automate the generation of summaries from textual documents.  
        - Version: v1  
        - A quick demo is available to test the endpoints via the Swagger interface.  

        ðŸŽ¯ Objectives  
        - Provide accurate and coherent summaries using optimized LLM models.  
        - Simplify text analysis by automating key information synthesis.  
        - Facilitate interaction with an intelligent conversational agent.  

        ðŸ”— Important URL  
        ```
        [Base URL]/api/v1/summarize/get_summary  
        ```
    "
# ENCRYPT_KEY=TshgGacKPYrm35m89UqbRg46JAbUm2yRtxOCQFdqa3w=
SECRET_KEY=
BACKEND_CORS_ORIGINS='["*"]' # The origins that are allowed to make cross-origin requests to your FastAPI backend.

#############################################
# PostgreSQL database environment variables
#############################################
# DATABASE_HOST=database
# DATABASE_USER=postgres
# DATABASE_PASSWORD=postgres
# DATABASE_NAME=fastapi_db
# DATABASE_CELERY_NAME=celery_schedule_jobs
# DATABASE_PORT=5432

#############################################
# Dynatrace Tracing
#############################################
IS_TRACING_ACTIVATED=True
DT_API_URL=
DT_API_TOKEN=
EXPORTER_NAME= "dynatrace"

#############################################
# Caddy variables
#############################################
# EXT_ENDPOINT1=localhost
# LOCAL_1=localhost
# LOCAL_2=127.0.0.1

#############################################
# Redis variables
#############################################
# REDIS_HOST=redis_server
# REDIS_PORT=6379

#############################################
# Minio variables (if you want to use minio, currently not included in standard setup)
#############################################
# MINIO_URL=storage.localhost
# MINIO_BUCKET=fastapi-minio
# MINIO_ROOT_USER=minioadmin
# MINIO_ROOT_PASSWORD=minioadmin

#############################################
# SQL Tool DB
#############################################
# SQL_TOOL_DB_ENABLED=true # Set to true to enable the SQL database tool.
# SQL_TOOL_DB_URI='postgresql://postgres:postgres@database/postgres?connect_timeout=10' # docker url
# SQL_TOOL_DB_SCHEMAS='["public"]'
# SQL_TOOL_DB_INFO_PATH='tool_constants/sql_tool_db_info.json'
# SQL_TOOL_DB_OVERWRITE_ON_START="true"

#############################################
# YAML config paths
#############################################
# EXTRACTION_CONFIG_PATH='config/extraction.yml'
AGENT_CONFIG_PATH='app/config/yaml/agent.yml'

#############################################
# Document ingestion Tool
#############################################
# DOCUMENT_INGESTION_TOOL_ENABLED="true" # Set to "true" to enable the PDF tool.
# DOCUMENT_INGESTION_TOOL_LOG_QUERY="false"
# DOCUMENT_INGESTION_TOOL_LOG_QUERY_PATH='tool_constants/query_log'
# DOCUMENT_INGESTION_TOOL_DATA_PATH='tool_constants/ingestion_documents'
# DOCUMENT_INGESTION_TOOL_DATABASE='pdf_indexing_1'
# DOCUMENT_RETRIEVAL_TOOL_EXTRACTION_CONFIG_PATH='config/extraction.yml'

# SOURCES_CONFIG_PATH='config/sources.yml'
#############################################
# Langsmith variables
#############################################
# LANGCHAIN_TRACING_V2="true"
# LANGCHAIN_ENDPOINT="https://api.langchain.plus" # change to "http://langchain-backend:1984" for self-hosted
# LANGCHAIN_API_KEY="<dummy>" # must be set to real key if using hosted - key must be set for self-hosted
# LANGCHAIN_PROJECT="default"